#!/bin/bash
#
## Don't do things twice.
## If there is a bioconda package, use it.
set -euo pipefail
set -x

LOCAL_BIN="$HOME/.local/bin"
mkdir -p "$LOCAL_BIN"

# sudo apt-get update && sudo apt-get upgrade -y

ADD_TO_PATH() {
	export PATH=$PWD:$PATH
	echo "export PATH=$PWD:\$PATH" >> ~/.bashrc
}

__basespace() {
	install_directory="${1:-$LOCAL_BIN}"
	basespace_executable="$install_directory/bs"
	wget "https://launch.basespace.illumina.com/CLI/latest/amd64-linux/bs" -O "$basespace_executable"
	chmod +x "$basespace_executable"
	# authenticate
	# bs auth
	# follow link and login with illumina credentials
	# bs whoami
}

__R() {
	sudo apt-get install -y r-base r-base-dev
	# you have to press enter
}

#https://cran.rstudio.com/bin/linux/ubuntu/
__Rubuntu() {
	# update indices
	sudo apt update -qq
	# install two helper packages we need
	sudo apt install --no-install-recommends software-properties-common dirmngr
	# add the signing key (by Michael Rutter) for these repos
	# To verify key, run gpg --show-keys /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc
	# Fingerprint: E298A3A825C0D65DFD57CBB651716619E084DAB9
	wget -qO- https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc | sudo tee -a /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc
	# add the R 4.0 repo from CRAN -- adjust 'jammy' to 'groovy' or 'bionic' as needed
	sudo add-apt-repository "deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/"
	# press enter
}

__Rstudio() {
	sudo apt-get install -y libclang-dev libssl-dev libcurl4-openssl-dev libxml2-dev
	# we're Ubuntu 22.04 (Jammy Jellyfish) and there is no
	# RStudio Server for the latest version, 24
	# LAST REVISION: 2024-07-17
	wget https://download2.rstudio.org/server/jammy/amd64/rstudio-server-2024.04.2-764-amd64.deb
	sudo dpkg -i rstudio-server-2024.04.2-764-amd64.deb \
		&& rm -fv rstudio-server-2024.04.2-764-amd64.deb
	# Rstudio starts immediately... check it out on port 8787
	# connect in browser to AWS ec2 instance format:
	# http://ec2-100-24-118-53.compute-1.amazonaws.com:8787
}

__bioconda() {
	# https://bioconda.github.io/index.html
	conda config --add channels defaults
	conda config --add channels bioconda
	conda config --add channels conda-forge
	conda config --set channel_priority strict
	# these commands create a .condarc file in your home directory
	# if you don't already have one
}

__conda_jupyter() {
	conda install -y jupyterlab
	conda instal -y notebook
}

__conda_binf() {
	conda install -y -c bioconda samtools
	conda install -y -c bioconda htslib
}

# jupyter lab
# jupyter notebook --generate-config

# List of software written in C/C++ with native builds
	## HTSlib
	## Requirements
	# zlib (required)
	# libbz2 (required, unless configured with --disable-bz2)
	# liblzma (required, unless configured with --disable-lzma)
	# libcurl (optional, but strongly recommended)
	# libcrypto (optional for Amazon S3 support; not needed on MacOS)
	# libdeflate (optional, but strongly recommended for faster gzip)
	## subread
	## STAR
# https://stackoverflow.com/a/16159057
echo "test"

https://mamba.readthedocs.io/en/latest/installation/micromamba-installation.html
install_micromamba()
{
	"${SHELL}" <(curl -L micro.mamba.pm/install.sh)
}


